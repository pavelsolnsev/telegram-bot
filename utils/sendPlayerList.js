// –ò–º–ø–æ—Ä—Ç –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –º–æ–¥—É–ª—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
const { GlobalState } = require("../store");
const { Markup } = require("telegraf");

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤
const sendPlayerList = async (ctx) => {
  let collectionDate = GlobalState.getCollectionDate(); // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É —Å–±–æ—Ä–∞
  let players = GlobalState.getPlayers(); // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
  let queue = GlobalState.getQueue(); // –ü–æ–ª—É—á–∞–µ–º –æ—á–µ—Ä–µ–¥—å –∏–≥—Ä–æ–∫–æ–≤
  let location = GlobalState.getLocation(); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–æ–∫–∞—Ü–∏—é (–∑–∞–≥–ª—É—à–∫–∞)
  let listMessageId = GlobalState.getListMessageId(); // –ü–æ–ª—É—á–∞–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å–ø–∏—Å–∫–æ–º –∏–≥—Ä–æ–∫–æ–≤
  const IMAGE_URL = GlobalState.getIMAGE_URL(); // –ü–æ–ª—É—á–∞–µ–º URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

  let formattedList = "";

  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è —Å–±–æ—Ä–∞
  if (collectionDate) {
    const options = { 
      year: "numeric", 
      month: "numeric", 
      day: "numeric", 
      hour: "2-digit", 
      minute: "2-digit", 
      weekday: "long" 
    };
    const formattedDate = collectionDate.toLocaleString("ru-RU", options);
    const [weekday, date, time] = formattedDate.split(", ");
    formattedList += `üïí <b>${weekday.charAt(0).toUpperCase() + weekday.slice(1)}, ${date.replace(" –≥.", "")}, ${time}</b>\n\n`;
  } else {
    formattedList += `üïí <b>–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Å–±–æ—Ä–∞ –Ω–µ —É–∫–∞–∑–∞–Ω—ã!</b>\n\n`;
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–æ–∫–∞—Ü–∏–∏ –∏ –æ–ø–ª–∞—Ç–µ
  formattedList += `üìç <b>–õ–æ–∫–∞—Ü–∏—è:</b> ${location}\n\n`;
  formattedList += `üí∞ <b>400‚ÄØ‚ÇΩ</b> ‚Äî –£—Å–ª—É–≥–∏: –º—è—á–∏, –≤–æ–¥–∞, –∞–ø—Ç–µ—á–∫–∞, –º–∞–Ω–∏—à–∫–∏, —Ñ–æ—Ç–æ –∏ —Å—ä—ë–º–∫–∞ –º–∞—Ç—á–∞! üé•‚öΩüíßüíä\n`;
  formattedList += `üì≤ <b>–ü–µ—Ä–µ–≤–æ–¥ –ø–æ –Ω–æ–º–µ—Ä—É:</b> <code>89166986185</code>\n`;
  formattedList += `üí≥ <b>–ö–∞—Ä—Ç–∞:</b> <code>2212312412412412</code>\n`;
  formattedList += `üíµ <b>–ù–∞–ª–∏—á–Ω—ã–µ:</b> –ú–æ–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å –Ω–∞ –º–µ—Å—Ç–µ.\n`;

  // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
  if (players.length > 0) {
    formattedList += `\n‚öΩ <b>–í –∏–≥—Ä–µ:</b>\n`;
    players.forEach((player, index) => {
      formattedList += `\n${index + 1}. ${player.name} ${player.username ? `(${player.username})` : ""}${player.paid ? " ‚úÖ" : ""}`;
    });
    formattedList += `\n\n------------------------------\n`;
  }

  // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ—á–µ—Ä–µ–¥–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
  if (queue.length > 0) {
    formattedList += `\nüì¢ <b>–û—á–µ—Ä–µ–¥—å –∏–≥—Ä–æ–∫–æ–≤:</b>\n`;
    queue.forEach((player, index) => {
      formattedList += `\n${index + 1}. ${player.name} ${player.username ? `(${player.username})` : ""}`;
    });
    formattedList += `\n\n------------------------------\n`;
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
  formattedList += `\nüìã <b>–°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤:</b> ${players.length} / ${GlobalState.getMaxPlayers()}`;

  // –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –∑–∞–ø–∏—Å–∏ –Ω–∞ –º–∞—Ç—á
  const inlineKeyboard = Markup.inlineKeyboard([
    Markup.button.callback("‚öΩ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–∞—Ç—á", "join_match"),
  ]);

  try {
    if (listMessageId) {
      // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ
      await ctx.telegram.editMessageCaption(
        ctx.chat.id,
        listMessageId,
        null,
        formattedList,
        { parse_mode: "HTML", reply_markup: inlineKeyboard.reply_markup }
      );
    } else {
      // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—â–µ –Ω–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
      const sentMessage = await ctx.replyWithPhoto(IMAGE_URL, {
        caption: formattedList,
        parse_mode: "HTML",
        reply_markup: inlineKeyboard.reply_markup,
      });
      GlobalState.setListMessageId(sentMessage.message_id); // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    }
  } catch (error) {
    if (error.description.includes('message to edit not found')) {
      // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º ID
      listMessageId = null;
      const sentMessage = await ctx.replyWithPhoto(IMAGE_URL, {
        caption: formattedList,
        parse_mode: "HTML",
        reply_markup: inlineKeyboard.reply_markup,
      });
      GlobalState.setListMessageId(sentMessage.message_id);
    } else {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–ø–∏—Å–∫–∞:", error); // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
    }
  }
};

module.exports = { sendPlayerList };

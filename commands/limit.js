const { deleteMessageAfterDelay } = require("../utils/deleteMessageAfterDelay"); // –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
const { sendPlayerList } = require("../utils/sendPlayerList"); // –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ø–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–æ–≤
const { sendPrivateMessage } = require("../message/sendPrivateMessage");

module.exports = (bot, GlobalState) => {
  bot.hears(/^l(\d+)$/i, async (ctx) => {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —à–∞–±–ª–æ–Ω—É "l<—á–∏—Å–ª–æ>"
    const ADMIN_ID = GlobalState.getAdminId(); // –ü–æ–ª—É—á–∞–µ–º ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const isMatchStarted = GlobalState.getStart(); // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∞—Ç –ª–∏ –º–∞—Ç—á
    let players = GlobalState.getPlayers(); // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö –∏–≥—Ä–æ–∫–æ–≤
    let queue = GlobalState.getQueue(); // –ü–æ–ª—É—á–∞–µ–º –æ—á–µ—Ä–µ–¥—å –∏–≥—Ä–æ–∫–æ–≤
    let MAX_PLAYERS = GlobalState.getMaxPlayers();
    const isTeamsDivided = GlobalState.getDivided();
    await ctx.deleteMessage().catch(() => {}); // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)

    if (ctx.from.id !== ADMIN_ID) {
      const message = await ctx.reply("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.");
      return deleteMessageAfterDelay(ctx, message.message_id);
    }

    if (!isMatchStarted) {
      const message = await ctx.reply("‚ö†Ô∏è –ú–∞—Ç—á –Ω–µ –Ω–∞—á–∞—Ç!");
      return deleteMessageAfterDelay(ctx, message.message_id);
    }

    if (isTeamsDivided) {
      const message = await ctx.reply("–õ–∏–º–∏—Ç –∑–∞–∫—Ä—ã—Ç");
      return deleteMessageAfterDelay(ctx, message.message_id);
    }

    const newLimit = Number(ctx.message.text.match(/^l(\d+)$/i)[1]); // –ü–æ–ª—É—á–∞–µ–º —á–∏—Å–ª–æ –ø–æ—Å–ª–µ "l"
    if (newLimit <= 0) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ª–∏–º–∏—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π
      const message = await ctx.reply(
        "‚ö†Ô∏è –õ–∏–º–∏—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º!"
      );
      return deleteMessageAfterDelay(ctx, message.message_id);
    }

    if (newLimit < MAX_PLAYERS) {
      // –ï—Å–ª–∏ –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç –º–µ–Ω—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ
      const playersToMove = players.slice(newLimit); // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–≥—Ä–æ–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å
      queue.unshift(...playersToMove); // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç–∏—Ö –∏–≥—Ä–æ–∫–æ–≤ –≤ –Ω–∞—á–∞–ª–æ –æ—á–µ—Ä–µ–¥–∏
      players = players.slice(0, newLimit); // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ —Å–ø–∏—Å–∫–µ
    } else if (newLimit > MAX_PLAYERS) {
      // –ï—Å–ª–∏ –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ
      const availableSlots = newLimit - players.length; // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Å—Ç
      const playersToAdd = queue.splice(0, availableSlots); // –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
      players.push(...playersToAdd); // –î–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤

      playersToAdd.forEach((player) => {
        sendPrivateMessage(bot, player.id, "üéâ –í—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–æ—Å—Ç–∞–≤–µ!");
      }); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É –ø–µ—Ä–µ–º–µ—â–µ–Ω–Ω–æ–º—É –∏–≥—Ä–æ–∫—É
    }

    GlobalState.setMaxPlayers(newLimit); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç –∏–≥—Ä–æ–∫–æ–≤
    GlobalState.setPlayers(players); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
    GlobalState.setQueue(queue); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –æ—á–µ—Ä–µ–¥–∏

    const message = await ctx.reply(
      `‚úÖ –õ–∏–º–∏—Ç –∏–≥—Ä–æ–∫–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ ${newLimit}.`
    );
    deleteMessageAfterDelay(ctx, message.message_id); // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
    await sendPlayerList(ctx); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
  });
};

const { deleteMessageAfterDelay } = require("../utils/deleteMessageAfterDelay");
const { sendPlayerList } = require("../utils/sendPlayerList");
const { sendPrivateMessage } = require("../message/sendPrivateMessage");

module.exports = (bot, GlobalState) => {
  bot.hears(/^l(\d+)$/i, async (ctx) => {
    const ADMIN_ID = GlobalState.getAdminId();
    const isMatchStarted = GlobalState.getStart();
    let players = GlobalState.getPlayers();
    let queue = GlobalState.getQueue();
    let MAX_PLAYERS = GlobalState.getMaxPlayers();
    const isTeamsDivided = GlobalState.getDivided();
    await ctx.deleteMessage().catch(() => {});

    if (ctx.from.id !== ADMIN_ID) {
      const message = await ctx.reply("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.");
      return deleteMessageAfterDelay(ctx, message.message_id);
    }

    if (!isMatchStarted) {
      const message = await ctx.reply("‚ö†Ô∏è –ú–∞—Ç—á –Ω–µ –Ω–∞—á–∞—Ç!");
      return deleteMessageAfterDelay(ctx, message.message_id);
    }

    if (isTeamsDivided) {
      const message = await ctx.reply("–õ–∏–º–∏—Ç –∑–∞–∫—Ä—ã—Ç");
      return deleteMessageAfterDelay(ctx, message.message_id);
    }

    const newLimit = Number(ctx.message.text.match(/^l(\d+)$/i)[1]);
    if (newLimit <= 0) {
      const message = await ctx.reply(
        "‚ö†Ô∏è –õ–∏–º–∏—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º!"
      );
      return deleteMessageAfterDelay(ctx, message.message_id);
    }

    if (newLimit < MAX_PLAYERS) {
      // –ï—Å–ª–∏ –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç –º–µ–Ω—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ
      const playersToMove = players.slice(newLimit); // –ò–≥—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ–º–µ—â–∞—é—Ç—Å—è –≤ –æ—á–µ—Ä–µ–¥—å
      queue.unshift(...playersToMove); // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç–∏—Ö –∏–≥—Ä–æ–∫–æ–≤ –≤ –Ω–∞—á–∞–ª–æ –æ—á–µ—Ä–µ–¥–∏
      players = players.slice(0, newLimit); // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ —Å–ø–∏—Å–∫–µ

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞–º, –ø–µ—Ä–µ–º–µ—â—ë–Ω–Ω—ã–º –≤ –æ—á–µ—Ä–µ–¥—å
      playersToMove.forEach((player) => {
        sendPrivateMessage(bot, player.id, "‚ö†Ô∏è –í—ã –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã –≤ –æ—á–µ—Ä–µ–¥—å!");
      });
    } else if (newLimit > MAX_PLAYERS) {
      // –ï—Å–ª–∏ –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ
      const availableSlots = newLimit - players.length; // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Å—Ç
      const playersToAdd = queue.splice(0, availableSlots); // –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
      players.push(...playersToAdd); // –î–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞–º, –ø–µ—Ä–µ–º–µ—â—ë–Ω–Ω—ã–º –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–æ—Å—Ç–∞–≤
      playersToAdd.forEach((player) => {
        sendPrivateMessage(bot, player.id, "üéâ –í—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–æ—Å—Ç–∞–≤–µ!");
      });
    }

    GlobalState.setMaxPlayers(newLimit);
    GlobalState.setPlayers(players);
    GlobalState.setQueue(queue);

    const message = await ctx.reply(
      `‚úÖ –õ–∏–º–∏—Ç –∏–≥—Ä–æ–∫–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ ${newLimit}.`
    );
    deleteMessageAfterDelay(ctx, message.message_id);
    await sendPlayerList(ctx);
  });
};
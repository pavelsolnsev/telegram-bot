require('dotenv').config();
const { Telegraf } = require('telegraf');

const bot = new Telegraf(process.env.BOT_TOKEN);
const GROUP_ID = Number(process.env.ID);
const ADMIN_ID = Number(process.env.ADMIN_ID);

let players = [];
let queue = [];
let MAX_PLAYERS = 14;
let collectionDate = null;

const sendPlayerList = (ctx) => {
    let formattedList = '';

    if (collectionDate) {
        const options = { year: 'numeric', month: 'numeric', day: 'numeric', hour: '2-digit', minute: '2-digit' };
        formattedList += `üìÖ <b>–°–±–æ—Ä –∏–≥—Ä–æ–∫–æ–≤:</b> ${collectionDate.toLocaleString('ru-RU', options)}\n\n`;
    }

    if (players.length > 0) {
        formattedList += `\n‚öΩ <b>–í –∏–≥—Ä–µ:</b>\n`;
        players.forEach((player, index) => {
            formattedList += `\n${index + 1}. ${player}`;
        });
        formattedList += `\n\n------------------------------\n`;
    }

    if (queue.length > 0) {
        formattedList += `\nüì¢ <b>–û—á–µ—Ä–µ–¥—å –∏–≥—Ä–æ–∫–æ–≤:</b>\n`;
        queue.forEach((player, index) => {
            formattedList += `\n${index + 1}. ${player}`;
        });
        formattedList += `\n\n------------------------------\n`;
    }

    formattedList += `\nüìã <b>–°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤:</b> ${players.length} / ${MAX_PLAYERS}`;
    ctx.reply(formattedList, { parse_mode: 'HTML' });
};

const isAdmin = (ctx) => ctx.from.id === ADMIN_ID;

bot.command('start', (ctx) => {
    if (!isAdmin(ctx)) return ctx.reply('‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');

    const userInput = ctx.message.text.trim().slice(7).trim();
    if (/^\d{2}\.\d{2}\.\d{4} \d{2}:\d{2}$/.test(userInput)) {
        collectionDate = new Date(userInput.replace('.', '/'));
        ctx.reply(`‚úÖ –°–±–æ—Ä –∏–≥—Ä–æ–∫–æ–≤ –Ω–∞—á–Ω—ë—Ç—Å—è ${collectionDate.toLocaleString('ru-RU', { year: 'numeric', month: 'numeric', day: 'numeric', hour: '2-digit', minute: '2-digit' })}.`);
    } else {
        ctx.reply('‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç! –ò—Å–ø–æ–ª—å–∑—É–π: /start –î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú');
    }
});

bot.command('end', (ctx) => {
    if (!isAdmin(ctx)) return ctx.reply('‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
    players = [];
    queue = [];
    collectionDate = null;
    ctx.reply('‚ùå –°–±–æ—Ä –∏–≥—Ä–æ–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω');
});

bot.command('limit', (ctx) => {
    if (!isAdmin(ctx)) return ctx.reply('‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');

    const match = ctx.message.text.match(/^\/limit (\d+)$/);
    if (match && [1, 14, 21, 28].includes(Number(match[1]))) {
        const newLimit = Number(match[1]);

        // –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤
        if (newLimit < MAX_PLAYERS) {
            // –ï—Å–ª–∏ –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç –º–µ–Ω—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ, –ø–µ—Ä–µ–º–µ—â–∞–µ–º –ª–∏—à–Ω–∏—Ö –∏–≥—Ä–æ–∫–æ–≤ –≤ –æ—á–µ—Ä–µ–¥—å
            const playersToMove = players.slice(newLimit); // –ò–≥—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –ø–æ–º–µ—â–∞—é—Ç—Å—è –≤ –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç
            queue.unshift(...playersToMove); // –î–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –Ω–∞—á–∞–ª–æ –æ—á–µ—Ä–µ–¥–∏
            players = players.slice(0, newLimit); // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–µ—â–∞—é—Ç—Å—è –≤ –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç
        } else if (newLimit > MAX_PLAYERS) {
            // –ï—Å–ª–∏ –Ω–æ–≤—ã–π –ª–∏–º–∏—Ç –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ, –ø–µ—Ä–µ–º–µ—â–∞–µ–º –∏–≥—Ä–æ–∫–æ–≤ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫
            const availableSlots = newLimit - players.length; // –°–≤–æ–±–æ–¥–Ω—ã–µ –º–µ—Å—Ç–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–ø–∏—Å–∫–µ
            const playersToAdd = queue.splice(0, availableSlots); // –ë–µ—Ä–µ–º –∏–≥—Ä–æ–∫–æ–≤ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
            players.push(...playersToAdd); // –î–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫
        }

        MAX_PLAYERS = newLimit; // –û–±–Ω–æ–≤–ª—è–µ–º –ª–∏–º–∏—Ç
        ctx.reply(`‚úÖ –õ–∏–º–∏—Ç –∏–≥—Ä–æ–∫–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ ${MAX_PLAYERS}.`);
        sendPlayerList(ctx);
    } else {
        ctx.reply('‚ö†Ô∏è –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –ª–∏–º–∏—Ç! –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: 1, 14, 21, 28.');
    }
});

bot.command('delete', (ctx) => {
    if (!isAdmin(ctx)) return ctx.reply('‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
    const match = ctx.message.text.match(/^\/delete (.+)$/);
    if (match) {
        const playerName = match[1].trim();
        players = players.filter(p => p !== playerName);
        queue = queue.filter(p => p !== playerName);
        ctx.reply(`‚úÖ ${playerName} —É–¥–∞–ª—ë–Ω –∏–∑ —Å–ø–∏—Å–∫–∞!`);
        sendPlayerList(ctx);
    } else {
        ctx.reply('‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã! –ò—Å–ø–æ–ª—å–∑—É–π: /delete <–∏–º—è –∏–≥—Ä–æ–∫–∞>.');
    }
});

bot.command('clear', (ctx) => {
    if (!isAdmin(ctx)) return ctx.reply('‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.');
    players = [];
    queue = [];
    ctx.reply('üóëÔ∏è –°–ø–∏—Å–æ–∫ –∏ –æ—á–µ—Ä–µ–¥—å –æ—á–∏—â–µ–Ω—ã!');
    sendPlayerList(ctx);
});

bot.command('add', (ctx) => {
    const chatId = ctx.chat.id;
    if (chatId !== GROUP_ID) return;

    const match = ctx.message.text.match(/^\/add (.+)$/);
    if (match) {
        const friendName = match[1].trim();
        const firstName = ctx.message.from.first_name || '';
        const lastName = ctx.message.from.last_name || '';
        const username = ctx.message.from.username ? `@${ctx.message.from.username}` : '';
        const basePlayer = `${firstName} ${lastName} ${username ? `(${username})` : ''}`.trim();

        // –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è –¥—Ä—É–≥–∞ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º, –∫—Ç–æ –µ–≥–æ –¥–æ–±–∞–≤–∏–ª
        const friendWithAddedBy = `${friendName} (–¥–æ–±–∞–≤–∏–ª: ${basePlayer})`;

        if (!players.includes(friendWithAddedBy) && !queue.includes(friendWithAddedBy)) {
            players.length < MAX_PLAYERS ? players.push(friendWithAddedBy) : queue.push(friendWithAddedBy);
            ctx.reply(`‚úÖ ${friendWithAddedBy} –¥–æ–±–∞–≤–ª–µ–Ω –≤ ${players.length <= MAX_PLAYERS ? '—Å–ø–∏—Å–æ–∫' : '–æ—á–µ—Ä–µ–¥—å'}!`);
            sendPlayerList(ctx);
        } else {
            ctx.reply('‚ö†Ô∏è –≠—Ç–æ—Ç –∏–≥—Ä–æ–∫ —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ –∏–ª–∏ –≤ –æ—á–µ—Ä–µ–¥–∏!');
        }
    } else {
        ctx.reply('‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã! –ò—Å–ø–æ–ª—å–∑—É–π: /add <–∏–º—è –¥—Ä—É–≥–∞>.');
    }
});

bot.command('remove', (ctx) => {
    const chatId = ctx.chat.id;
    if (chatId !== GROUP_ID) return;

    const match = ctx.message.text.match(/^\/remove (.+)$/);
    if (match) {
        const friendName = match[1].trim(); // –ò–º—è –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å
        const firstName = ctx.message.from.first_name || '';
        const lastName = ctx.message.from.last_name || '';
        const username = ctx.message.from.username ? `@${ctx.message.from.username}` : '';
        const basePlayer = `${firstName} ${lastName} ${username ? `(${username})` : ''}`.trim();

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–∞ –ø–æ –∏–º–µ–Ω–∏ –¥—Ä—É–≥–∞ (–±–µ–∑ —É—á–µ—Ç–∞ —á–∞—Å—Ç–∏ "–¥–æ–±–∞–≤–∏–ª: ...")
        const findPlayerByName = (name) => {
            return players.find(player => player.startsWith(name)) || queue.find(player => player.startsWith(name));
        };

        // –ò—â–µ–º –∏–≥—Ä–æ–∫–∞ –ø–æ –∏–º–µ–Ω–∏
        const playerToRemove = findPlayerByName(friendName);

        if (playerToRemove) {
            // –£–¥–∞–ª—è–µ–º –∏–≥—Ä–æ–∫–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –æ—á–µ—Ä–µ–¥–∏
            players = players.filter(p => p !== playerToRemove);
            queue = queue.filter(p => p !== playerToRemove);

            // –ï—Å–ª–∏ —É–¥–∞–ª–∏–ª–∏ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞, –¥–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–≥–æ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫
            if (players.length < MAX_PLAYERS && queue.length > 0) {
                players.push(queue.shift());
            }

            ctx.reply(`‚úÖ ${playerToRemove} —É–¥–∞–ª—ë–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –æ—Ç –∏–º–µ–Ω–∏ ${basePlayer}!`);
            sendPlayerList(ctx);
        } else {
            ctx.reply('‚ö†Ô∏è –≠—Ç–æ—Ç –∏–≥—Ä–æ–∫ –Ω–µ –≤ —Å–ø–∏—Å–∫–µ!');
        }
    } else {
        ctx.reply('‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã! –ò—Å–ø–æ–ª—å–∑—É–π: /remove <–∏–º—è –¥—Ä—É–≥–∞>.');
    }
});

bot.on('text', (ctx) => {
    if (!collectionDate) return;
    const chatId = ctx.chat.id;
    const text = ctx.message.text.trim();
    if (chatId !== GROUP_ID) return;

    const firstName = ctx.message.from.first_name || '';
    const lastName = ctx.message.from.last_name || '';
    const username = ctx.message.from.username ? `@${ctx.message.from.username}` : '';
    const basePlayer = `${firstName} ${lastName} ${username ? `(${username})` : ''}`.trim();

    if (text === '+') {
        if (!players.includes(basePlayer) && !queue.includes(basePlayer)) {
            players.length < MAX_PLAYERS ? players.push(basePlayer) : queue.push(basePlayer);
            ctx.reply(`‚úÖ ${basePlayer} –¥–æ–±–∞–≤–ª–µ–Ω –≤ ${players.length <= MAX_PLAYERS ? '—Å–ø–∏—Å–æ–∫' : '–æ—á–µ—Ä–µ–¥—å'}!`);
            sendPlayerList(ctx);
        } else {
            ctx.reply('‚ö†Ô∏è –¢—ã —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ –∏–ª–∏ –≤ –æ—á–µ—Ä–µ–¥–∏!');
        }
    } else if (text === '-') {
        if (players.includes(basePlayer)) {
            players = players.filter(p => p !== basePlayer);
            if (queue.length > 0) players.push(queue.shift());
            ctx.reply(`‚úÖ ${basePlayer} —É–¥–∞–ª—ë–Ω –∏–∑ —Å–ø–∏—Å–∫–∞!`);
            sendPlayerList(ctx);
        } else {
            ctx.reply('‚ö†Ô∏è –¢—ã –Ω–µ –≤ —Å–ø–∏—Å–∫–µ –∏–≥—Ä–æ–∫–æ–≤!');
        }
    } else if (text === '/list') {
        sendPlayerList(ctx);
    }
});

bot.launch();
console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
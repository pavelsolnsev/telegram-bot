require('dotenv').config();
const { Telegraf } = require('telegraf');

const bot = new Telegraf(process.env.BOT_TOKEN);
const GROUP_ID = Number(process.env.ID);

let players = [];
let queue = [];
let MAX_PLAYERS = 14;  // –ù–∞—á–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç
let collectionDate = null;  // –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –¥–ª—è —Å–±–æ—Ä–∞

const sendPlayerList = (ctx) => {
    let formattedList = '';

    if (collectionDate) {
        formattedList += `üìÖ <b>–°–±–æ—Ä –∏–≥—Ä–æ–∫–æ–≤:</b> ${collectionDate.toLocaleString()}\n\n`;
    }

    if (players.length > 0) {
        formattedList += `\n‚öΩ <b>–í –∏–≥—Ä–µ:</b>\n`;
        players.forEach((player, index) => {
            formattedList += `\n${index + 1}. ${player}`;
        });
        formattedList += `\n\n------------------------------\n`;
    }

    if (queue.length > 0) {
        formattedList += `\nüì¢ <b>–û—á–µ—Ä–µ–¥—å –∏–≥—Ä–æ–∫–æ–≤:</b>\n`;
        queue.forEach((player, index) => {
            formattedList += `\n${index + 1}. ${player}`;
        });
        formattedList += `\n\n------------------------------\n`;
    }

    formattedList += `\nüìã <b>–°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤:</b> ${players.length} / ${MAX_PLAYERS}`;
    
    ctx.reply(formattedList, { parse_mode: 'HTML' });
};

const redistributePlayers = () => {
    // –ï—Å–ª–∏ –∏–≥—Ä–æ–∫–æ–≤ –≤ —Å–ø–∏—Å–∫–µ –±–æ–ª—å—à–µ, —á–µ–º –ª–∏–º–∏—Ç, –ø–µ—Ä–µ–º–µ—â–∞–µ–º –∏–∑–ª–∏—à–∫–∏ –≤ –æ—á–µ—Ä–µ–¥—å
    while (players.length > MAX_PLAYERS) {
        const player = players.pop();
        queue.unshift(player);  // –ü–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –Ω–∞—á–∞–ª–æ –æ—á–µ—Ä–µ–¥–∏
    }

    // –ï—Å–ª–∏ –≤ –æ—á–µ—Ä–µ–¥–∏ –µ—Å—Ç—å –º–µ—Å—Ç–æ, –ø–µ—Ä–µ–º–µ—â–∞–µ–º –∏–≥—Ä–æ–∫–æ–≤ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –≤ —Å–ø–∏—Å–æ–∫
    while (players.length < MAX_PLAYERS && queue.length > 0) {
        const player = queue.shift();  // –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–≥–æ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
        players.push(player);  // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
    }
};

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º
bot.command('start', (ctx) => {
    const userInput = ctx.message.text.trim().slice(7).trim(); // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /start

    if (userInput) {
        const dateRegex = /^\d{2}\.\d{2}\.\d{4} \d{2}:\d{2}$/;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–æ–¥ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
        if (dateRegex.test(userInput)) {
            collectionDate = new Date(userInput.replace('.', '/'));  // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç JavaScript
            ctx.reply(`‚úÖ –°–±–æ—Ä –∏–≥—Ä–æ–∫–æ–≤ –Ω–∞—á–Ω—ë—Ç—Å—è ${collectionDate.toLocaleString()}.`);
        } else {
            ctx.reply('‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç! –ò—Å–ø–æ–ª—å–∑—É–π: /start –î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú');
        }
    } else {
        ctx.reply('‚ö†Ô∏è –£–∫–∞–∂–∏ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /start (–Ω–∞–ø—Ä–∏–º–µ—Ä, 12.02.2025 18:00).');
    }
});

bot.command('end', (ctx) => {
    if (!collectionDate) {
        ctx.reply('‚ö†Ô∏è –°–±–æ—Ä –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª—Å—è!');
        return;
    }

    players = [];
    queue = [];
    collectionDate = null;  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞—Ç—É —Å–±–æ—Ä–∞
    ctx.reply('‚ùå –°–±–æ—Ä –∏–≥—Ä–æ–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ /limit –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞
bot.command('limit', (ctx) => {
    const text = ctx.message.text.trim();
    const match = text.match(/^\/limit (\d+)$/); // –ò—â–µ–º —á–∏—Å–ª–æ –ø–æ—Å–ª–µ /limit

    if (match) {
        const newLimit = Number(match[1]);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ª–∏–º–∏—Ç –¥–æ–ø—É—Å—Ç–∏–º—ã–π
        if ([1, 14, 21, 28].includes(newLimit)) {
            MAX_PLAYERS = newLimit;
            redistributePlayers();
            ctx.reply(`‚úÖ –õ–∏–º–∏—Ç –∏–≥—Ä–æ–∫–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ ${newLimit}. –ò–≥—Ä–æ–∫–∏ –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã!`);
            sendPlayerList(ctx);
        } else {
            ctx.reply('‚ö†Ô∏è –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –ª–∏–º–∏—Ç! –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: 1, 14, 21, 28.');
        }
    } else {
        ctx.reply('‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã! –ò—Å–ø–æ–ª—å–∑—É–π: /limit <—á–∏—Å–ª–æ> (–Ω–∞–ø—Ä–∏–º–µ—Ä, /limit 14).');
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥
bot.on('text', (ctx) => {
    if (!collectionDate) {
        return; // –ï—Å–ª–∏ –¥–∞—Ç–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –∫–æ–º–∞–Ω–¥—ã –¥–∞–ª—å—à–µ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è
    }

    const chatId = ctx.chat.id;
    const text = ctx.message.text ? ctx.message.text.trim() : '';

    if (chatId !== GROUP_ID) return;

    const firstName = ctx.message.from.first_name || '';
    const lastName = ctx.message.from.last_name || '';
    const username = ctx.message.from.username ? `@${ctx.message.from.username}` : '';
    const basePlayer = `${firstName} ${lastName} ${username ? `(${username})` : ''}`.trim();

    if (text === '+') {
        if (players.includes(basePlayer) || queue.includes(basePlayer)) {
            ctx.reply('‚ö†Ô∏è –¢—ã —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ –∏–ª–∏ –≤ –æ—á–µ—Ä–µ–¥–∏!');
            return;
        }

        if (players.length < MAX_PLAYERS) {
            players.push(basePlayer);
            ctx.reply(`‚úÖ ${basePlayer} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫!`);
        } else {
            queue.push(basePlayer);
            ctx.reply(`‚ö†Ô∏è –°–ø–∏—Å–æ–∫ –ø–æ–ª–æ–Ω! ${basePlayer} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å.`);
        }
        sendPlayerList(ctx);
    } else if (text === '-') {
        if (players.includes(basePlayer)) {
            players = players.filter(p => p !== basePlayer);
            ctx.reply(`‚úÖ ${basePlayer} —É–¥–∞–ª—ë–Ω –∏–∑ —Å–ø–∏—Å–∫–∞!`);

            if (queue.length > 0) {
                const nextPlayer = queue.shift();
                players.push(nextPlayer);
                ctx.reply(`‚úÖ ${nextPlayer} –ø–µ—Ä–µ–º–µ—â—ë–Ω –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –≤ —Å–ø–∏—Å–æ–∫!`);
            }
        } else {
            ctx.reply('‚ö†Ô∏è –¢—ã –Ω–µ –≤ —Å–ø–∏—Å–∫–µ –∏–≥—Ä–æ–∫–æ–≤!');
        }
        sendPlayerList(ctx);
    } else if (text.startsWith('+ ')) {
        const friend = text.slice(2).trim();
        if (!friend) {
            ctx.reply('‚ö†Ô∏è –£–∫–∞–∂–∏ –∏–º—è –¥—Ä—É–≥–∞ –ø–æ—Å–ª–µ `+`!');
            return;
        }
        if (players.includes(friend) || queue.includes(friend)) {
            ctx.reply(`‚ö†Ô∏è ${friend} —É–∂–µ –≤ —Å–ø–∏—Å–∫–µ –∏–ª–∏ –≤ –æ—á–µ—Ä–µ–¥–∏!`);
            return;
        }

        const addedBy = `${firstName} ${lastName}`;
        const friendWithNote = `${friend} (–î–æ–±–∞–≤–∏–ª: ${addedBy})`;

        if (players.length < MAX_PLAYERS) {
            players.push(friendWithNote);
            ctx.reply(`‚úÖ ${friendWithNote} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫!`);
        } else {
            queue.push(friendWithNote);
            ctx.reply(`‚ö†Ô∏è –°–ø–∏—Å–æ–∫ –ø–æ–ª–æ–Ω! ${friendWithNote} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å.`);
        }
        sendPlayerList(ctx);
    } else if (text.startsWith('- ')) {
        const friend = text.slice(2).trim();
        if (!friend) {
            ctx.reply('‚ö†Ô∏è –£–∫–∞–∂–∏ –∏–º—è –¥—Ä—É–≥–∞ –ø–æ—Å–ª–µ `-`!');
            return;
        }

        const friendName = extractName(friend);

        if (players.some(p => extractName(p) === friendName)) {
            players = players.filter(p => extractName(p) !== friendName);
            ctx.reply(`‚úÖ ${friendName} —É–¥–∞–ª—ë–Ω –∏–∑ —Å–ø–∏—Å–∫–∞!`);
            if (queue.length > 0) {
                const nextPlayer = queue.shift();
                players.push(nextPlayer);
                ctx.reply(`‚úÖ ${nextPlayer} –ø–µ—Ä–µ–º–µ—â—ë–Ω –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –≤ —Å–ø–∏—Å–æ–∫!`);
            }
        } else if (queue.some(q => extractName(q) === friendName)) {
            queue = queue.filter(q => extractName(q) !== friendName);
            ctx.reply(`‚úÖ ${friendName} —É–¥–∞–ª—ë–Ω –∏–∑ –æ—á–µ—Ä–µ–¥–∏!`);
        } else {
            ctx.reply(`‚ö†Ô∏è ${friendName} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –∏–≥—Ä–æ–∫–æ–≤ –∏–ª–∏ –æ—á–µ—Ä–µ–¥–∏!`);
        }
        sendPlayerList(ctx);
    } else if (text === '/list') {
        sendPlayerList(ctx);
    } else if (text === '/clear') {
        players = [];
        queue = [];
        ctx.reply('üóëÔ∏è –°–ø–∏—Å–æ–∫ –∏ –æ—á–µ—Ä–µ–¥—å –æ—á–∏—â–µ–Ω—ã!');
        sendPlayerList(ctx);
    } else {
        ctx.reply('‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞! –¢—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–ª—è—Ç—å —Å–µ–±—è —á–µ—Ä–µ–∑ `+`, –¥—Ä—É–≥–∞ —á–µ—Ä–µ–∑ `+ –∏–º—è`, –∞ —É–¥–∞–ª—è—Ç—å —á–µ—Ä–µ–∑ `-` –∏–ª–∏ `- –∏–º—è`.');
    }
});

bot.launch();
console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!');

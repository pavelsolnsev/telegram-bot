// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–≥—Ä–∞—é—â–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
const buildPlayingTeamsMessage = (team1, team2, teamIndex1, teamIndex2, status = 'playing') => {
  // –í—ã–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
  const emoji = {
    playing: 'üèÄ',    // –ú–∞—Ç—á –∏–¥–µ—Ç (–¥–ª—è play –∏ next –≤ –Ω–∞—á–∞–ª–µ)
    finished: '‚úÖ'     // –ú–∞—Ç—á –∑–∞–≤–µ—Ä—à–µ–Ω (–¥–ª—è fin –∏ next –ø–µ—Ä–µ–¥ –Ω–æ–≤—ã–º –º–∞—Ç—á–µ–º)
  }[status] || 'üèÄ';

  let message = `${emoji} –ö–æ–º–∞–Ω–¥—ã –Ω–∞ –ø–æ–ª–µ:\n\n`;
  message += `<b>–ö–æ–º–∞–Ω–¥–∞ ${teamIndex1 + 1}:</b>\n`;
  team1.forEach((player, index) => {
    message += `${index + 1}. ${player.name} (${player.username || "–ë–µ–∑ username"}) - –ì–æ–ª—ã: ${player.goals || 0}\n`;
  });
  
  message += `\n<b>–ö–æ–º–∞–Ω–¥–∞ ${teamIndex2 + 1}:</b>\n`;
  team2.forEach((player, index) => {
    message += `${index + 1}. ${player.name} (${player.username || "–ë–µ–∑ username"}) - –ì–æ–ª—ã: ${player.goals || 0}\n`;
  });

  // –î–æ–±–∞–≤–ª—è–µ–º —Å—á–µ—Ç, –µ—Å–ª–∏ –º–∞—Ç—á –∑–∞–≤–µ—Ä—à–µ–Ω
  if (status === 'finished') {
    const team1Goals = team1.reduce((sum, p) => sum + (p.goals || 0), 0);
    const team2Goals = team2.reduce((sum, p) => sum + (p.goals || 0), 0);
    message += `\n<b>–°—á–µ—Ç: ${team1Goals} - ${team2Goals}</b>`;
  }

  return message;
};

module.exports = { buildPlayingTeamsMessage };
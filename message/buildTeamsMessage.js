const buildTeamsMessage = (teams, title = "–°–æ—Å—Ç–∞–≤—ã –∫–æ–º–∞–Ω–¥", teamStats = {}) => {
  console.log('Inside buildTeamsMessage:');
  console.log('teams:', JSON.stringify(teams, null, 2));
  console.log('teamStats:', JSON.stringify(teamStats, null, 2));
  const teamColors = ["üî¥", "üîµ", "üü¢", "üü°"];
  
  // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –∫–æ–º–∞–Ω–¥ —Å –∏—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –∏ –∏–Ω–¥–µ–∫—Å–∞–º–∏ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
  const teamsWithStats = teams.map((team, index) => {
    const teamKey = `team${index + 1}`;
    const stats = teamStats[teamKey] || { wins: 0, losses: 0, draws: 0, games: 0, goalsScored: 0, goalsConceded: 0 };
    const points = stats.wins * 3 + stats.draws * 1;
    return { team, stats, points, originalIndex: index };
  });

  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–æ –æ—á–∫–∞–º (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)
  teamsWithStats.sort((a, b) => b.points - a.points || (b.stats.goalsScored - b.stats.goalsConceded) - (a.stats.goalsScored - a.stats.goalsConceded));

  let message = `üèÜ <b>${title}:</b>\n\n<pre>`;

  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –º–µ—Å—Ç–∞
  message += "–ú  –ö–æ–º–∞–Ω–¥–∞|–ò|–í|–ù|–ü|–ó–ú|–ü–ú|–†–ú|–û\n";
  message += "--+-------+--+-+-+-+-+--+-+-+\n";

  // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å –º–µ—Å—Ç–∞–º–∏
  teamsWithStats.forEach((teamData, position) => {
    const { stats, points, originalIndex } = teamData;
    const teamColor = teamColors[originalIndex] || "‚öΩ";
    const place = (position + 1).toString().padStart(2, " "); // –ú–µ—Å—Ç–æ (1, 2, 3...)
    const teamName = `${teamColor}`.padEnd(7, " "); // –≠–º–æ–¥–∑–∏ –±–µ–∑ –Ω–æ–º–µ—Ä–∞
    const goalDifference = (stats.goalsScored - stats.goalsConceded);

    message += `${place} ${teamName}|${stats.games}|${stats.wins}|${stats.draws}|${stats.losses}|${stats.goalsScored.toString().padStart(2, " ")}|${stats.goalsConceded.toString().padStart(2, " ")}|${goalDifference.toString().padStart(2, " ")}|${points}\n`;
  });

  message += "</pre>\n";

  // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–∞–≤—ã –∫–æ–º–∞–Ω–¥ (–ø–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–º –∏–Ω–¥–µ–∫—Å–∞–º, –∞ –Ω–µ –ø–æ –º–µ—Å—Ç–∞–º)
  message += "<b>–°–æ—Å—Ç–∞–≤—ã:</b>\n";
  teams.forEach((team, index) => {
    const teamColor = teamColors[index] || "‚öΩ";
    message += `\n${teamColor} <b>–ö–æ–º–∞–Ω–¥–∞ ${index + 1}:</b>\n`;
    team.forEach((player, i) => {
      const goalsText = player.goals && player.goals > 0 ? `, –ì:${player.goals}` : "";
      message += `${i + 1}. ${player.name} (‚≠ê${player.rating || 0}${goalsText})\n`;
    });
  });

  return message;
};

module.exports = { buildTeamsMessage };